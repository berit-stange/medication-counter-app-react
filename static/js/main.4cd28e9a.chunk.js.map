{"version":3,"sources":["util/auth.js","components/Account.js","components/Todo.js","pages/home.js","pages/login.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["authMiddleWare","history","localStorage","getItem","push","Account","props","componentWillMount","authToken","axios","defaults","headers","common","Authorization","get","then","response","console","log","data","setState","firstName","userCredentials","lastName","email","phoneNumber","country","username","uiLoading","catch","error","status","errorMsg","handleChange","event","target","name","value","handleImageChange","image","files","profilePictureHandler","preventDefault","form_data","FormData","append","state","content","post","window","location","reload","imageError","updateFormValues","buttonLoading","formRequest","profilePicture","this","classes","rest","className","toolbar","CircularProgress","size","uiProgess","Card","clsx","root","CardContent","details","Typography","locationText","gutterBottom","variant","Button","color","type","startIcon","uploadButton","onClick","onChange","customError","progress","Divider","autoComplete","noValidate","Grid","container","spacing","item","md","xs","TextField","fullWidth","label","margin","disabled","CardActions","submitButton","progess","Component","withStyles","theme","flexGrow","padding","mixins","display","avatar","height","width","flexShrink","paddingLeft","buttonProperty","position","top","zIndex","left","marginLeft","fontSize","marginTop","Todo","paragraph","home","render","loadAccountPage","loadTodoPage","logoutHandler","removeItem","imageLoading","CssBaseline","AppBar","appBar","Toolbar","noWrap","Drawer","drawer","paper","drawerPaper","List","ListItem","button","ListItemIcon","ListItemText","primary","login","handleSubmit","loading","userData","password","setItem","token","errors","nextProps","UI","Container","component","maxWidth","form","required","id","autoFocus","helperText","submit","Link","href","general","flexDirection","alignItems","App","exact","path","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0cAAaA,EAAiB,SAACC,GAET,OADAC,aAAaC,QAAQ,cAEnCF,EAAQG,KAAK,W,qBC2DfC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAgBVC,mBAAqB,WACjBP,EAAe,EAAKM,MAAML,SAC1B,IAAMO,EAAYN,aAAaC,QAAQ,aACvCM,IAAMC,SAASC,QAAQC,OAAS,CAAEC,cAAc,GAAD,OAAKL,IACpDC,IACKK,IAAI,SACJC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAASG,MACrB,EAAKC,SAAS,CACVC,UAAWL,EAASG,KAAKG,gBAAgBD,UACzCE,SAAUP,EAASG,KAAKG,gBAAgBC,SACxCC,MAAOR,EAASG,KAAKG,gBAAgBE,MACrCC,YAAaT,EAASG,KAAKG,gBAAgBG,YAC3CC,QAASV,EAASG,KAAKG,gBAAgBI,QACvCC,SAAUX,EAASG,KAAKG,gBAAgBK,SACxCC,WAAW,OAGlBC,OAAM,SAACC,GAC0B,MAA1BA,EAAMd,SAASe,QACf,EAAKzB,MAAML,QAAQG,KAAK,UAE5Ba,QAAQC,IAAIY,GACZ,EAAKV,SAAS,CAAEY,SAAU,qCAxCnB,EA4CnBC,aAAe,SAACC,GACZ,EAAKd,SAAL,eACKc,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA9CvB,EAkDnBC,kBAAoB,SAACJ,GACjB,EAAKd,SAAS,CACVmB,MAAOL,EAAMC,OAAOK,MAAM,MApDf,EAwDnBC,sBAAwB,SAACP,GACrBA,EAAMQ,iBACN,EAAKtB,SAAS,CACVQ,WAAW,IAEf5B,EAAe,EAAKM,MAAML,SAC1B,IAAMO,EAAYN,aAAaC,QAAQ,aACnCwC,EAAY,IAAIC,SACpBD,EAAUE,OAAO,QAAS,EAAKC,MAAMP,OACrCI,EAAUE,OAAO,UAAW,EAAKC,MAAMC,SACvCtC,IAAMC,SAASC,QAAQC,OAAS,CAAEC,cAAc,GAAD,OAAKL,IACpDC,IACKuC,KAAK,cAAeL,EAAW,CAC5BhC,QAAS,CACL,eAAgB,yBAGvBI,MAAK,WACFkC,OAAOC,SAASC,YAEnBtB,OAAM,SAACC,GAC0B,MAA1BA,EAAMd,SAASe,QACf,EAAKzB,MAAML,QAAQG,KAAK,UAE5Ba,QAAQC,IAAIY,GACZ,EAAKV,SAAS,CACVQ,WAAW,EACXwB,WAAY,kCAnFT,EAwFnBC,iBAAmB,SAACnB,GAChBA,EAAMQ,iBACN,EAAKtB,SAAS,CAAEkC,eAAe,IAC/BtD,EAAe,EAAKM,MAAML,SAC1B,IAAMO,EAAYN,aAAaC,QAAQ,aACvCM,IAAMC,SAASC,QAAQC,OAAS,CAAEC,cAAc,GAAD,OAAKL,IACpD,IAAM+C,EAAc,CAChBlC,UAAW,EAAKyB,MAAMzB,UACtBE,SAAU,EAAKuB,MAAMvB,SACrBG,QAAS,EAAKoB,MAAMpB,SAExBjB,IACKuC,KAAK,QAASO,GACdxC,MAAK,WACF,EAAKK,SAAS,CAAEkC,eAAe,OAElCzB,OAAM,SAACC,GAC0B,MAA1BA,EAAMd,SAASe,QACf,EAAKzB,MAAML,QAAQG,KAAK,UAE5Ba,QAAQC,IAAIY,GACZ,EAAKV,SAAS,CACVkC,eAAe,QA3G3B,EAAKR,MAAQ,CACTzB,UAAW,GACXE,SAAU,GACVC,MAAO,GACPC,YAAa,GACbE,SAAU,GACVD,QAAS,GACT8B,eAAgB,GAChB5B,WAAW,EACX0B,eAAe,EACfF,WAAY,IAbD,E,0CAmHnB,WACI,MAA6BK,KAAKnD,MAA1BoD,EAAR,EAAQA,QAAYC,EAApB,iBACA,OAA6B,IAAzBF,KAAKX,MAAMlB,UAEP,uBAAMgC,UAAWF,EAAQX,QAAzB,UACI,qBAAKa,UAAWF,EAAQG,UACvBJ,KAAKX,MAAMlB,WAAa,cAACkC,EAAA,EAAD,CAAkBC,KAAM,IAAKH,UAAWF,EAAQM,eAK7E,uBAAMJ,UAAWF,EAAQX,QAAzB,UACI,qBAAKa,UAAWF,EAAQG,UACxB,eAACI,EAAA,EAAD,2BAAUN,GAAV,IAAgBC,UAAWM,YAAKR,EAAQS,KAAMT,GAA9C,UACI,eAACU,EAAA,EAAD,WACI,qBAAKR,UAAWF,EAAQW,QAAxB,SACI,gCACI,eAACC,EAAA,EAAD,CAAYV,UAAWF,EAAQa,aAAcC,cAAY,EAACC,QAAQ,KAAlE,UACKhB,KAAKX,MAAMzB,UADhB,IAC4BoC,KAAKX,MAAMvB,YAEvC,cAACmD,EAAA,EAAD,CACID,QAAQ,WACRE,MAAM,UACNC,KAAK,SACLb,KAAK,QACLc,UAAW,cAAC,IAAD,IACXjB,UAAWF,EAAQoB,aACnBC,QAAStB,KAAKhB,sBAPlB,0BAWA,uBAAOmC,KAAK,OAAOI,SAAUvB,KAAKnB,sBAEjCmB,KAAKX,MAAMM,YACR,sBAAKQ,UAAWF,EAAQuB,YAAxB,UACK,IADL,iEASZ,qBAAKrB,UAAWF,EAAQwB,cAE5B,cAACC,EAAA,EAAD,QAGJ,uBACA,cAAClB,EAAA,EAAD,2BAAUN,GAAV,IAAgBC,UAAWM,YAAKR,EAAQS,KAAMT,GAA9C,SACI,uBAAM0B,aAAa,MAAMC,YAAU,EAAnC,UACI,cAACF,EAAA,EAAD,IACA,cAACf,EAAA,EAAD,UACI,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,aACNC,OAAO,QACP3D,KAAK,YACLqC,QAAQ,WACRpC,MAAOoB,KAAKX,MAAMzB,UAClB2D,SAAUvB,KAAKxB,iBAGvB,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,YACNC,OAAO,QACP3D,KAAK,WACLqC,QAAQ,WACRpC,MAAOoB,KAAKX,MAAMvB,SAClByD,SAAUvB,KAAKxB,iBAGvB,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,QACNC,OAAO,QACP3D,KAAK,QACLqC,QAAQ,WACRuB,UAAU,EACV3D,MAAOoB,KAAKX,MAAMtB,MAClBwD,SAAUvB,KAAKxB,iBAGvB,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,eACNC,OAAO,QACP3D,KAAK,QACLwC,KAAK,SACLH,QAAQ,WACRuB,UAAU,EACV3D,MAAOoB,KAAKX,MAAMrB,YAClBuD,SAAUvB,KAAKxB,iBAGvB,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,YACNC,OAAO,QACP3D,KAAK,aACL4D,UAAU,EACVvB,QAAQ,WACRpC,MAAOoB,KAAKX,MAAMnB,SAClBqD,SAAUvB,KAAKxB,iBAGvB,cAACqD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,UACNC,OAAO,QACP3D,KAAK,UACLqC,QAAQ,WACRpC,MAAOoB,KAAKX,MAAMpB,QAClBsD,SAAUvB,KAAKxB,sBAK/B,cAACkD,EAAA,EAAD,IACA,cAACc,EAAA,EAAD,UAGR,eAACvB,EAAA,EAAD,CACIC,MAAM,UACNF,QAAQ,YACRG,KAAK,SACLhB,UAAWF,EAAQwC,aACnBnB,QAAStB,KAAKJ,iBACd2C,SACIvC,KAAKX,MAAMQ,gBACVG,KAAKX,MAAMzB,YACXoC,KAAKX,MAAMvB,WACXkC,KAAKX,MAAMpB,QAVpB,yBAcK+B,KAAKX,MAAMQ,eAAiB,cAACQ,EAAA,EAAD,CAAkBC,KAAM,GAAIH,UAAWF,EAAQyC,oB,GApQ9EC,aA4QPC,OA7TA,SAACC,GAAD,MAAY,CACvBvD,QAAS,CACLwD,SAAU,EACVC,QAASF,EAAMd,QAAQ,IAE3B3B,QAASyC,EAAMG,OAAO5C,QACtBM,KAAM,GACNE,QAAS,CACLqC,QAAS,QAEbC,OAAQ,CACJC,OAAQ,IACRC,MAAO,IACPC,WAAY,EACZP,SAAU,GAEdhC,aAAc,CACVwC,YAAa,QAEjBC,eAAgB,CACZC,SAAU,WACVC,IAAK,OAETlD,UAAW,CACPiD,SAAU,QACVE,OAAQ,OACRP,OAAQ,OACRC,MAAO,OACPO,KAAM,MACNF,IAAK,OAETf,QAAS,CACLc,SAAU,YAEdnC,aAAc,CACVuC,WAAY,MACZtB,OAAQO,EAAMd,QAAQ,IAE1BP,YAAa,CACTN,MAAO,MACP2C,SAAU,SACVC,UAAW,IAEfrB,aAAc,CACVqB,UAAW,WAiRJlB,CAAmBhG,GC5T5BmH,E,4JACF,WACI,IAAQ9D,EAAYD,KAAKnD,MAAjBoD,QACR,OACI,uBAAME,UAAWF,EAAQX,QAAzB,UACI,qBAAKa,UAAWF,EAAQG,UACxB,cAACS,EAAA,EAAD,CAAYmD,WAAS,EAArB,oC,GANGrB,aAcHC,OAvBA,SAACC,GAAD,MAAY,CACxBvD,QAAS,CACLwD,SAAU,EACVC,QAASF,EAAMd,QAAQ,IAE3B3B,QAASyC,EAAMG,OAAO5C,WAkBVwC,CAAmBmB,G,8HCoC7BE,E,kDAkBF,WAAYpH,GAAQ,IAAD,8BACf,cAAMA,IAlBVwC,MAAQ,CACJ6E,QAAQ,GAgBO,EAbnBC,gBAAkB,SAAC1F,GACf,EAAKd,SAAS,CAAEuG,QAAQ,KAYT,EATnBE,aAAe,SAAC3F,GACZ,EAAKd,SAAS,CAAEuG,QAAQ,KAQT,EALnBG,cAAgB,SAAC5F,GACbhC,aAAa6H,WAAW,aACxB,EAAKzH,MAAML,QAAQG,KAAK,WAGT,EAYnBG,mBAAqB,WACjBP,EAAe,EAAKM,MAAML,SAC1B,IAAMO,EAAYN,aAAaC,QAAQ,aACvCM,IAAMC,SAASC,QAAQC,OAAS,CAAEC,cAAc,GAAD,OAAKL,IACpDC,IACKK,IAAI,SACJC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAASG,MACrB,EAAKC,SAAS,CACVC,UAAWL,EAASG,KAAKG,gBAAgBD,UACzCE,SAAUP,EAASG,KAAKG,gBAAgBC,SACxCC,MAAOR,EAASG,KAAKG,gBAAgBE,MAGrCG,SAAUX,EAASG,KAAKG,gBAAgBK,SACxCC,WAAW,OAIlBC,OAAM,SAACC,GAC0B,MAA1BA,EAAMd,SAASe,QACf,EAAKzB,MAAML,QAAQG,KAAK,UAE5Ba,QAAQC,IAAIY,GACZ,EAAKV,SAAS,CAAEY,SAAU,qCAjClC,EAAKc,MAAQ,CACTzB,UAAW,GACXE,SAAU,GAEVK,WAAW,EACXoG,cAAc,GARH,E,0CAwCnB,WACI,IAAQtE,EAAYD,KAAKnD,MAAjBoD,QACR,OAA6B,IAAzBD,KAAKX,MAAMlB,UAEP,qBAAKgC,UAAWF,EAAQS,KAAxB,SACKV,KAAKX,MAAMlB,WAAa,cAACkC,EAAA,EAAD,CAAkBC,KAAM,IAAKH,UAAWF,EAAQM,cAK7E,sBAAKJ,UAAWF,EAAQS,KAAxB,UACI,cAAC8D,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQjB,SAAS,QAAQrD,UAAWF,EAAQyE,OAA5C,SACI,cAACC,EAAA,EAAD,UACI,cAAC9D,EAAA,EAAD,CAAYG,QAAQ,KAAK4D,QAAM,EAA/B,yBAKR,eAACC,EAAA,EAAD,CACI1E,UAAWF,EAAQ6E,OACnB9D,QAAQ,YACRf,QAAS,CACL8E,MAAO9E,EAAQ+E,aAJvB,UAOI,qBAAK7E,UAAWF,EAAQG,UACxB,cAACsB,EAAA,EAAD,IACA,iCAEI,8BACK,IACA1B,KAAKX,MAAMzB,UAFhB,IAE4BoC,KAAKX,MAAMvB,cAG3C,cAAC4D,EAAA,EAAD,IACA,eAACuD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAY7D,QAAStB,KAAKoE,aAA1C,UACI,eAACgB,EAAA,EAAD,WACK,IACD,cAAC,IAAD,IAAc,OAElB,cAACC,EAAA,EAAD,CAAcC,QAAQ,WALL,QAQrB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAe7D,QAAStB,KAAKmE,gBAA7C,UACI,eAACiB,EAAA,EAAD,WACK,IACD,cAAC,IAAD,IAAmB,OAEvB,cAACC,EAAA,EAAD,CAAcC,QAAQ,cALL,WAQrB,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAAc7D,QAAStB,KAAKqE,cAA5C,UACI,eAACe,EAAA,EAAD,WACK,IACD,cAAC,IAAD,IAAkB,OAEtB,cAACC,EAAA,EAAD,CAAcC,QAAQ,aALL,gBAU7B,8BAAMtF,KAAKX,MAAM6E,OAAS,cAAC,EAAD,IAAc,cAAC,EAAD,a,GAzHzCvB,aAgIJC,QApKA,SAACC,GAAD,MAAY,CACvBnC,KAAM,CACFuC,QAAS,QAEbyB,OAAQ,CACJhB,OAAQb,EAAMa,OAAOoB,OAAS,GAElCA,OAAQ,CACJ1B,MAVY,IAWZC,WAAY,GAEhB2B,YAAa,CACT5B,MAdY,KAgBhB9D,QAAS,CACLwD,SAAU,EACVC,QAASF,EAAMd,QAAQ,IAE3BmB,OAAQ,CACJC,OAAQ,IACRC,MAAO,IACPC,WAAY,EACZP,SAAU,EACVgB,UAAW,IAEfvD,UAAW,CACPiD,SAAU,QACVE,OAAQ,OACRP,OAAQ,OACRC,MAAO,OACPO,KAAM,MACNF,IAAK,OAETrD,QAASyC,EAAMG,OAAO5C,WAmIXwC,CAAmBqB,G,oBCpJ5BsB,G,kDACF,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAkBV2B,aAAe,SAACC,GACZ,EAAKd,SAAL,eACKc,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SArBvB,EAyBnB4G,aAAe,SAAC/G,GACZA,EAAMQ,iBACN,EAAKtB,SAAS,CAAE8H,SAAS,IACzB,IAAMC,EAAW,CACb3H,MAAO,EAAKsB,MAAMtB,MAClB4H,SAAU,EAAKtG,MAAMsG,UAEzB3I,IACKuC,KAAK,SAAUmG,GACfpI,MAAK,SAACC,GACHd,aAAamJ,QAAQ,YAArB,iBAA4CrI,EAASG,KAAKmI,QAC1D,EAAKlI,SAAS,CACV8H,SAAS,IAEb,EAAK5I,MAAML,QAAQG,KAAK,QAE3ByB,OAAM,SAACC,GACJ,EAAKV,SAAS,CACVmI,OAAQzH,EAAMd,SAASG,KACvB+H,SAAS,QAzCrB,EAAKpG,MAAQ,CACTtB,MAAO,GACP4H,SAAU,GACVG,OAAQ,GACRL,SAAS,GAPE,E,6DAWnB,SAA0BM,GAClBA,EAAUC,GAAGF,QACb9F,KAAKrC,SAAS,CACVmI,OAAQC,EAAUC,GAAGF,W,oBAmCjC,WACI,IAAQ7F,EAAYD,KAAKnD,MAAjBoD,QACR,EAA4BD,KAAKX,MAAzByG,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,QAChB,OAGI,eAACQ,GAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,0CAEA,cAAC3B,EAAA,EAAD,IAEA,sBAAKrE,UAAWF,EAAQ8E,MAAxB,UAII,cAAClE,EAAA,EAAD,CAAYqF,UAAU,KAAKlF,QAAQ,KAAnC,mBAGA,uBAAMb,UAAWF,EAAQmG,KAAMxE,YAAU,EAAzC,UACI,cAACO,EAAA,EAAD,CACInB,QAAQ,WACRsB,OAAO,SACP+D,UAAQ,EACRjE,WAAS,EACTkE,GAAG,QACHjE,MAAM,gBACN1D,KAAK,QACLgD,aAAa,QACb4E,WAAS,EACTC,WAAYV,EAAO/H,MACnBM,QAAOyH,EAAO/H,MACdwD,SAAUvB,KAAKxB,eAEnB,cAAC2D,EAAA,EAAD,CACInB,QAAQ,WACRsB,OAAO,SACP+D,UAAQ,EACRjE,WAAS,EACTzD,KAAK,WACL0D,MAAM,WACNlB,KAAK,WACLmF,GAAG,WACH3E,aAAa,mBACb6E,WAAYV,EAAOH,SACnBtH,QAAOyH,EAAOH,SACdpE,SAAUvB,KAAKxB,eAEnB,eAACyC,EAAA,EAAD,CACIE,KAAK,SACLiB,WAAS,EACTpB,QAAQ,YACRE,MAAM,UACNf,UAAWF,EAAQwG,OACnBnF,QAAStB,KAAKwF,aACdjD,SAAUkD,IAAYzF,KAAKX,MAAMtB,QAAUiC,KAAKX,MAAMsG,SAP1D,oBAUKF,GAAW,cAACpF,EAAA,EAAD,CAAkBC,KAAM,GAAIH,UAAWF,EAAQyC,aAE/D,cAACb,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC0E,GAAA,EAAD,CAAMC,KAAK,SAAS3F,QAAQ,QAA5B,SACK,uCAIZ8E,EAAOc,SACJ,cAAC/F,EAAA,EAAD,CAAYG,QAAQ,QAAQb,UAAWF,EAAQuB,YAA/C,SACKsE,EAAOc,uB,GAtHpBjE,aAiILC,QA1JA,SAACC,GAAD,MAAY,CACvBkC,MAAO,CACHjB,UAAWjB,EAAMd,QAAQ,GACzBkB,QAAS,OACT4D,cAAe,SACfC,WAAY,UAEhBV,KAAM,CACFhD,MAAO,OACPU,UAAWjB,EAAMd,QAAQ,IAE7B0E,OAAQ,CACJnE,OAAQO,EAAMd,QAAQ,EAAG,EAAG,IAEhCP,YAAa,CACTN,MAAO,MACP2C,SAAU,SACVC,UAAW,IAEfpB,QAAS,CACLc,SAAU,eAsIHZ,CAAmB2C,I,OClJnBwB,OAnBf,WAEE,OACE,gCACE,wCACA,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIf,UAAWjC,KACjC,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,SAASf,UAAWX,gBCL9B2B,QACW,cAA7B1H,OAAOC,SAAS0H,UAEe,UAA7B3H,OAAOC,SAAS0H,UAEhB3H,OAAOC,SAAS0H,SAASC,MAAM,2DCjBnC,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjK,MAAK,YAAkD,IAA/CkK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAAS3D,OACP,cAAC,IAAM4D,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7K,MAAK,SAAC8K,GACLA,EAAaC,gBAEdjK,OAAM,SAACC,GACNb,QAAQa,MAAMA,EAAMiK,YE5G5BjB,O","file":"static/js/main.4cd28e9a.chunk.js","sourcesContent":["export const authMiddleWare = (history) => {\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    if (authToken === null) {\r\n        history.push('/login')\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Card, CardActions, CardContent, Divider, Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport axios from 'axios';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\nconst styles = (theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    root: {},\r\n    details: {\r\n        display: 'flex'\r\n    },\r\n    avatar: {\r\n        height: 110,\r\n        width: 100,\r\n        flexShrink: 0,\r\n        flexGrow: 0\r\n    },\r\n    locationText: {\r\n        paddingLeft: '15px'\r\n    },\r\n    buttonProperty: {\r\n        position: 'absolute',\r\n        top: '50%'\r\n    },\r\n    uiProgess: {\r\n        position: 'fixed',\r\n        zIndex: '1000',\r\n        height: '31px',\r\n        width: '31px',\r\n        left: '50%',\r\n        top: '35%'\r\n    },\r\n    progess: {\r\n        position: 'absolute'\r\n    },\r\n    uploadButton: {\r\n        marginLeft: '8px',\r\n        margin: theme.spacing(1)\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    submitButton: {\r\n        marginTop: '10px'\r\n    }\r\n});\r\n\r\n\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            username: '',\r\n            country: '',\r\n            profilePicture: '',\r\n            uiLoading: true,\r\n            buttonLoading: false,\r\n            imageError: ''\r\n        };\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .get('/user')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    firstName: response.data.userCredentials.firstName,\r\n                    lastName: response.data.userCredentials.lastName,\r\n                    email: response.data.userCredentials.email,\r\n                    phoneNumber: response.data.userCredentials.phoneNumber,\r\n                    country: response.data.userCredentials.country,\r\n                    username: response.data.userCredentials.username,\r\n                    uiLoading: false\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({ errorMsg: 'Error in retrieving the data' });\r\n            });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleImageChange = (event) => {\r\n        this.setState({\r\n            image: event.target.files[0]\r\n        });\r\n    };\r\n\r\n    profilePictureHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            uiLoading: true\r\n        });\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        let form_data = new FormData();\r\n        form_data.append('image', this.state.image);\r\n        form_data.append('content', this.state.content);\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .post('/user/image', form_data, {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({\r\n                    uiLoading: false,\r\n                    imageError: 'Error in posting the data'\r\n                });\r\n            });\r\n    };\r\n\r\n    updateFormValues = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ buttonLoading: true });\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        const formRequest = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            country: this.state.country\r\n        };\r\n        axios\r\n            .post('/user', formRequest)\r\n            .then(() => {\r\n                this.setState({ buttonLoading: false });\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login');\r\n                }\r\n                console.log(error);\r\n                this.setState({\r\n                    buttonLoading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes, ...rest } = this.props;\r\n        if (this.state.uiLoading === true) {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n                </main>\r\n            );\r\n        } else {\r\n            return (\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Card {...rest} className={clsx(classes.root, classes)}>\r\n                        <CardContent>\r\n                            <div className={classes.details}>\r\n                                <div>\r\n                                    <Typography className={classes.locationText} gutterBottom variant=\"h4\">\r\n                                        {this.state.firstName} {this.state.lastName}\r\n                                    </Typography>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        size=\"small\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                        className={classes.uploadButton}\r\n                                        onClick={this.profilePictureHandler}\r\n                                    >\r\n                                        Upload Photo\r\n                                    </Button>\r\n                                    <input type=\"file\" onChange={this.handleImageChange} />\r\n\r\n                                    {this.state.imageError ? (\r\n                                        <div className={classes.customError}>\r\n                                            {' '}\r\n                                            Wrong Image Format || Supported Format are PNG and JPG\r\n                                        </div>\r\n                                    ) : (\r\n                                        false\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.progress} />\r\n                        </CardContent>\r\n                        <Divider />\r\n                    </Card>\r\n\r\n                    <br />\r\n                    <Card {...rest} className={clsx(classes.root, classes)}>\r\n                        <form autoComplete=\"off\" noValidate>\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"First name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"firstName\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.firstName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Last name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"lastName\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.lastName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Email\"\r\n                                            margin=\"dense\"\r\n                                            name=\"email\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={true}\r\n                                            value={this.state.email}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Phone Number\"\r\n                                            margin=\"dense\"\r\n                                            name=\"phone\"\r\n                                            type=\"number\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={true}\r\n                                            value={this.state.phoneNumber}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"User Name\"\r\n                                            margin=\"dense\"\r\n                                            name=\"userHandle\"\r\n                                            disabled={true}\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.username}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6} xs={12}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Country\"\r\n                                            margin=\"dense\"\r\n                                            name=\"country\"\r\n                                            variant=\"outlined\"\r\n                                            value={this.state.country}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                            <Divider />\r\n                            <CardActions />\r\n                        </form>\r\n                    </Card>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        className={classes.submitButton}\r\n                        onClick={this.updateFormValues}\r\n                        disabled={\r\n                            this.state.buttonLoading ||\r\n                            !this.state.firstName ||\r\n                            !this.state.lastName ||\r\n                            !this.state.country\r\n                        }\r\n                    >\r\n                        Save details\r\n                        {this.state.buttonLoading && <CircularProgress size={30} className={classes.progess} />}\r\n                    </Button>\r\n                </main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Account);\r\n","import React, { Component } from 'react'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = ((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n})\r\n);\r\n\r\nclass Todo extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Typography paragraph>\r\n                    Hello I am todo\r\n                </Typography>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (withStyles(styles)(Todo));","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Account from '../components/Account';\r\nimport Todo from '../components/Todo';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\n// import Avatar from '@material-ui/core/avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { authMiddleWare } from '../util/auth'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    avatar: {\r\n        height: 110,\r\n        width: 100,\r\n        flexShrink: 0,\r\n        flexGrow: 0,\r\n        marginTop: 20\r\n    },\r\n    uiProgess: {\r\n        position: 'fixed',\r\n        zIndex: '1000',\r\n        height: '31px',\r\n        width: '31px',\r\n        left: '50%',\r\n        top: '35%'\r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n});\r\n\r\nclass home extends Component {\r\n    state = {\r\n        render: false\r\n    };\r\n\r\n    loadAccountPage = (event) => {\r\n        this.setState({ render: true });\r\n    };\r\n\r\n    loadTodoPage = (event) => {\r\n        this.setState({ render: false });\r\n    };\r\n\r\n    logoutHandler = (event) => {\r\n        localStorage.removeItem('AuthToken');\r\n        this.props.history.push('/login');\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            // profilePicture: '',\r\n            uiLoading: true,\r\n            imageLoading: false\r\n        };\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        authMiddleWare(this.props.history);\r\n        const authToken = localStorage.getItem('AuthToken');\r\n        axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n        axios\r\n            .get('/user')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    firstName: response.data.userCredentials.firstName,\r\n                    lastName: response.data.userCredentials.lastName,\r\n                    email: response.data.userCredentials.email,\r\n                    // phoneNumber: response.data.userCredentials.phoneNumber,\r\n                    // country: response.data.userCredentials.country,\r\n                    username: response.data.userCredentials.username,\r\n                    uiLoading: false,\r\n                    // profilePicture: response.data.userCredentials.imageUrl\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.props.history.push('/login')\r\n                }\r\n                console.log(error);\r\n                this.setState({ errorMsg: 'Error in retrieving the data' });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.uiLoading === true) {\r\n            return (\r\n                <div className={classes.root}>\r\n                    {this.state.uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" noWrap>\r\n                                TodoApp\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        <Divider />\r\n                        <center>\r\n                            {/* <Avatar src={this.state.profilePicture} className={classes.avatar} /> */}\r\n                            <p>\r\n                                {' '}\r\n                                {this.state.firstName} {this.state.lastName}\r\n                            </p>\r\n                        </center>\r\n                        <Divider />\r\n                        <List>\r\n                            <ListItem button key=\"Todo\" onClick={this.loadTodoPage}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <NotesIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Todo\" />\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"Account\" onClick={this.loadAccountPage}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <AccountBoxIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Account\" />\r\n                            </ListItem>\r\n\r\n                            <ListItem button key=\"Logout\" onClick={this.logoutHandler}>\r\n                                <ListItemIcon>\r\n                                    {' '}\r\n                                    <ExitToAppIcon />{' '}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Logout\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n\r\n                    <div>{this.state.render ? <Account /> : <Todo />}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(home);","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\n// Material UI components\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    progess: {\r\n        position: 'absolute'\r\n    }\r\n});\r\n\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: [],\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios\r\n            .post('/login', userData)\r\n            .then((response) => {\r\n                localStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    errors: error.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors, loading } = this.state;\r\n        return (\r\n\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <h1>Login.js</h1>\r\n\r\n                <CssBaseline />\r\n\r\n                <div className={classes.paper}>\r\n                    {/* <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar> */}\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Login\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={this.handleSubmit}\r\n                            disabled={loading || !this.state.email || !this.state.password}\r\n                        >\r\n                            Sign In\r\n                            {loading && <CircularProgress size={30} className={classes.progess} />}\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"signup\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(login);","import React from 'react';\r\n// import { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport home from './pages/home';\r\nimport login from './pages/login';\r\n// import Signup from './pages/Signup';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>App.js</h1>\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={home} />\r\n            <Route exact path=\"/login\" component={login} />\r\n            {/* <Route exact path=\"/signup\" component={Signup} /> */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}